rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Allow access to videos directory
    match /videos/{userId}/{filename} {
      // Allow read if the user is authenticated.
      allow read: if request.auth != null;
      // Allow write if the requesting user owns the folder and the file meets the criteria.
      allow write, delete: if request.auth != null 
                  && request.auth.uid == userId
                  && request.resource.size < 100 * 1024 * 1024 // Limit file size to 100MB
                  && request.resource.contentType.matches('video/.*');
    }
    
    // Allow access to previews directory
    match /previews/{userId}/{filename} {
      allow read: if request.auth != null;
      // Allow Cloud Functions to write and users to delete their own files
      allow write: if request.auth.token.firebase.sign_in_provider == 'service_account';
      allow delete: if request.auth != null && request.auth.uid == userId;
    }

    // Allow access to thumbnails directory
    match /thumbnails/{userId}/{filename} {
      allow read: if request.auth != null;
      // Allow Cloud Functions to write and users to delete their own files
      allow write: if request.auth.token.firebase.sign_in_provider == 'service_account';
      allow delete: if request.auth != null && request.auth.uid == userId;
    }

    // Allow access to HLS directory
    match /hls/{userId}/{filename=**} {
      allow read: if request.auth != null;
      // Allow Cloud Functions to write and users to delete their own files
      allow write: if request.auth.token.firebase.sign_in_provider == 'service_account';
      allow delete: if request.auth != null && request.auth.uid == userId;
    }

    // Allow access to profile images directory
    match /profile_images/{userId}/{filename} {
      allow read: if request.auth != null;
      allow write, delete: if request.auth != null 
                  && request.auth.uid == userId
                  && request.resource.size < 5 * 1024 * 1024  // Limit file size to 5MB
                  && request.resource.contentType.matches('image/.*');
    }
  }
} 